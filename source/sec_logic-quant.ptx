<?xml version="1.0" encoding="UTF-8"?>
<section xml:id="sec_logic-quant" xmlns:xi="http://www.w3.org/2001/XInclude">
	<title>Quantifiers and Predicate Logic</title>
	<subsection>
		<title>Beyond Propositions</title>
		<investigation>
		<p>
			Consider the statements below.
			Decide whether any are equivalent to each other,
			or whether any imply any others.
		</p>

		<p>
			<ol>
				<li>
					<p>
						You can fool some people all of the time.
					</p>
				</li>

				<li>
					<p>
						You can fool everyone some of the time.
					</p>
				</li>

				<li>
					<p>
						You can always fool some people.
					</p>
				</li>

				<li>
					<p>
						Sometimes you can fool everyone.
					</p>
				</li>
			</ol>
		</p>
		</investigation>

		<exercise label="ip_logic-quant">
			<statement>
				<p>
					After thinking about the Investigate! problem above, share your initial thoughts below.
				</p>
			</statement>
			<response/>
		</exercise>

		<p>
			We have been a little sloppy when describing statements.
			Consider, <q>if a number is a multiple of 4, then it is even.</q> This is a fantastic example of a true implication with a false converse (just because a number is even, doesn't mean it is a multiple of 4).
			However, the example isn't really a <q>statement</q> in the sense we have been using, since <q>a number</q> is some sort of variable.
		</p>

		<p>
			Let's be a little more careful.
			To make the variable explicit, write the sentence this way:
		</p>

		<blockquote>
			<p>
				If <m>x</m> is a multiple of 4, then <m>x</m> is even.
			</p>
		</blockquote>

		<p>
			While the sentence is not a statement, it becomes a statement as soon as we substitute a number in for <m>x</m>.
			Examples:
		</p>

		<blockquote>
			<p>
				If 8 is a multiple of 4, then 8 is even.
			</p>
		</blockquote>

		<blockquote>
			<p>
				If 14 is a multiple of 4, then 14 is even.
			</p>
		</blockquote>

		<p>
			Both of these are statements, and both of them are true (the first because it is <em>true implies true</em>, the second because it is <em>false implies true</em>).
			In fact, <em>any</em> number (integer) we substitute for <m>x</m> will resolve to a true statement!
		</p>

		<p>
			Let's just consider the first five natural numbers: 0, 1, 2, 3, 4.
			Each statement we get is an implication, and we can call the five <q>if</q> parts <m>P, Q, R, S, U</m> and the five <q>then</q> parts <m>A, B, C, D, E</m> (luckily we are only talking about five statements).
			We then claim that all these implications are true, so we claim that this is true:
			<me>
				(P \imp A) \wedge (Q \imp B) \wedge (R \imp C) \wedge (S\imp D) \wedge (U \imp E)
			</me>.
			We can even make a truth table (with <m>2^{10} = 1024</m> rows) to help us understand the statement.
		</p>

		<p>
			Let's go wild and consider the first 25 natural numbers.
			With only twenty-six capital letters, we need another way to refer to the atomic statements.
			We will use subscripts: <m>P_0, P_1, \ldots, P_{24}</m> for the <q>if</q> parts and <m>Q_0, Q_1, \ldots, Q_{24}</m> for the <q>then</q> parts.
			Now to claim that all these are true is to claim that the following is a true statement:
			<me>
				(P_0 \imp Q_0) \wedge (P_1 \imp Q_1) \wedge (P_2 \imp Q_2) \wedge \cdots \wedge (P_{24} \imp Q_{24})
			</me>.
			Of course, the dot-dot-dots here are not really part of logic, that is just short hand to say that I didn't want to type out all 25 implications.
		</p>
		<aside>
		<p>
			A truth table for this statement would have <m>2^{50}</m> rows, if each row occupied half a centimeter, would stretch almost 3.5 trillion miles, which would stretch from the earth to the sum roughly 380,000 times.
		</p>
		</aside>

		<p>
			What we really want, though, is to take the conjunction (<q>and</q>) of the infinitely many statements <m>P_n \imp Q_n</m> where we replace <m>n</m> with each of the infinitely many integers.
			Not only is this impractical, it is also <q>illegal</q>: a molecular statement must be made up of a <em>finite</em> number of atoms in our construction of symbolic logic.
		</p>

		<p>
			There must be a better way!  What we want is to claim that <q>for all numbers <m>n</m>, the implication <m>P_n \imp Q_n</m> is true.</q>  So let's say this.
			We even introduce a new symbol to deal with the <term>quantifier</term>, <q>for all</q>.
		</p>

		<definition xml:id="def-for-all">
			<statement>
				<p>
					The <term>universal quantifier</term> is written <m>\forall</m> and read, <q>for all.</q>
				</p>
			</statement>
		</definition>

		<p>
			Our statement above can then be written as,
			<me>
				\forall n (P_n \imp Q_n)
			</me>.
			That seems much nicer than writing out infinitely many implications.
		</p>

		<p>
			While we are at it, let's consider a way to work with arbitrarily many <em>disjunctions</em> (<q>or</q> statements).
			Remember that a disjunction is true precisely when at least one of the parts are true.
			For example, we might claim that the statement, <q><m>n</m> is prime and <m>n</m> is even,</q> is true for at least one value of <m>n</m>.
			Maybe use <m>P_n</m> for <q><m>n</m> is prime</q> and <m>E_n</m> for <q><m>n</m> is odd</q>
			Instead of writing,
			<me>
				(P_0 \wedge E_0) \vee (P_1 \wedge E_1) \vee (P_2 \wedge E_2) \vee \cdots
			</me>
			(which is not allowed, because statements must be finite), we should write,
			<me>
				\exists n (P_n \wedge E_n)
			</me>.
		</p>

		<definition xml:id="def-exists">
			<statement>
				<p>
					The <term>existential quantifier</term> is written <m>\exists</m> and is read, <q>there exists.</q>
				</p>
			</statement>
		</definition>

		<p>
			Our goal in this section is to understand statements that involve these two quantifiers and learn how they interact with the logical connectives from propositional logic studied in <xref ref="sec_logic-prop"/>.
		</p>
		<!--
		<p>
			Consider the following statement:
		</p>

		<blockquote>
			<p>
				For every positive integer <m>n</m>, there is a positive integer <m>m</m> such that if <m>n</m> in prime, then <m>m</m> is prime and larger than <m>n</m>.
			</p>
		</blockquote>

		<p>
			The statement happens to be true, but for now, just consider it's logical form.
			Is the statement atomic or molecular?  Certainly there are logical connectives in there, but is it possible to break the entire statement up into smaller statements?
		</p>

		<p>
			Not really.
			We could look at the hypothesis of the implication: <q><m>n</m> is prime.</q>  But that's not a statement, since it contains a variable.
			It is neither true nor false, unless we specify what <m>n</m> is.
			In the original statement, we did specify this, by saying we are talking about all <m>n</m>.
			We cannot apply the same <q>for all</q> to the just this hypothesis though without changing the meaning of the statement.
		</p>

		<p>
			So the statement is atomic.
			However, consider the following simpler statement:
		</p>

		<blockquote>
			<p>
				There are infinitely many primes.
			</p>
		</blockquote>

		<p>
			Here's the thing.
			The two statements are equivalent, and their equivalence has nothing to do with the concept of a prime.
			They are equivalent on the basis of their logical form.
			This suggests that we need to develop a type of logic that can deal with variables and <term>quantifiers</term> like <q>for all</q> and <q>there exists.</q>
		</p>
		-->
		<objectives>
			<introduction>
				<p>
					After completing this section, you should be able to do the following.
				</p>
			</introduction>

			<ol>
				<li>
					<p>
						Identify the logical form of statements involving quantifiers and write them out in symbols.
					</p>
				</li>

				<li>
					<p>
						Simplify statements involving quantifiers and logical connectives, including negation.
					</p>
				</li>

				<li>
					<p>
						Justify why a statement involving quantifiers is true or false by considering the domain of discourse.
					</p>
				</li>
			</ol>
		</objectives>

    <exercises xml:id="pa-logic-quant">
      <title>Preview Activity</title>
      <introduction>
        <p>
            Before reading on to the main content of the section, complete this preview activity to start thinking about the types of questions this section will address.
        </p>
      </introduction>
      <exercise label="pa-logic-quant-translate">
        <statement>
          <p>
            Let <m>P(x,y)</m> be the predicate, <q>person <m>x</m> can be fooled at time <m>y</m>.</q>
          </p>
          <p>
            Match each statement with it's representation in symbols.
          </p>
        </statement>
        <matches>
          <match order="1">
            <premise>Some people can be fooled all of the time.</premise>
            <response><m>\exists x \forall y P(x,y)</m></response>
          </match>
          <match order="2">
            <premise>Everyone can be fooled sometimes.</premise>
            <response><m>\forall x \exists y P(x,y)</m></response>
          </match>
          <match order="3">
            <premise>It is always true that some people can be fooled.</premise>
            <response><m>\forall y \exists x P(x,y)</m></response>
          </match>
          <match order="4">
            <premise>Sometimes everyone can be fooled.</premise>
            <response><m>\exists y \forall x P(x,y)</m></response>
          </match>
        </matches>
      </exercise>
      
      <exercise label="pa-logic-quant-neg">
        <statement>
          <p>
            Your friend believes that in fact you cannot fool everyone at the same time.  What is another way of saying this, and how would you write that in symbols (using <m>P(x,y)</m> to say you can fool <m>x</m> at time <m>y</m>).
          </p>
        </statement>
        <choices randomize="yes">
          <choice correct="yes">
            <statement>
              <p>
                Someone is never fooled.  <m>\exists x \forall y\neg P(x,y)</m>
              </p>
            </statement>
          </choice>
          <choice>
            <statement>
              <p>
                Everyone is never fooled. <m>\forall x \forall y \neg P(x,y)</m>
              </p>
            </statement>
          </choice>
          <choice>
            <statement>
              <p>
                Someone is not fooled sometimes. <m>\exists x \exists y \neg P(x,y)</m>
              </p>
            </statement>
          </choice>
          <choice>
            <statement>
              <p>
                Everyone is not fooled sometimes.  <m>\forall x \exists y \neg P(x,y)</m>
              </p>
            </statement>
          </choice>
        </choices>
      </exercise>

      <exercise label="pa-logic-quant-interpretation">
        <statement>
          <p>
            Regardless of your beliefs of how many people can be fooled at various times,  what could you conclude if we reinterpret <m>P(x,y)</m> to mean <m>x \lt y</m> and only quantify over the natural numbers (so <m>\forall x</m> means <q>for all natural numbers</q> and <m>\exists x</m> means <q>there exists a natural number</q>)?  Select all of the following that apply.
          </p>
        </statement>
        <choices>
          <choice correct="yes">
            <statement>
              <p>
                <m>\forall x \exists y P(x,y)</m> is true.
              </p>
            </statement>
          </choice>
          <choice correct="no">
            <statement>
              <p>
                <m>\exists x \forall y P(x,y)</m> is true.
              </p>
            </statement>
            <feedback>
              <p>
                Careful, <m>P(x,y)</m> means <m>x</m> is less than <m>y</m>, not <m>x</m> is less than <em>or equal</em> to <m>y</m>.
              </p>
            </feedback>
          </choice>
          <choice correct="no">
            <statement>
              <p>
                <m>\forall y \exists x P(x,y)</m> is true.
              </p>
            </statement>
          </choice>
          <choice correct="no">
            <statement>
              <p>
                <m>\exists y \forall x P(x,y)</m> is true.
              </p>
            </statement>
          </choice>
          <choice correct="yes">
            <statement>
              <p>
                No matter what <m>P(x,y)</m> means, we can conclude that <m>\forall x \exists y P(x,y)</m> and <m>\exists y \forall x</m> are NOT <em>logically equivalent</em>
              </p>
            </statement>
          </choice>
        </choices>
      </exercise>
    </exercises>

	</subsection>

	<subsection xml:id="subsec-statements-with-variables">
		<title>Statements with variables</title>
		<p>
			<idx><h>free variable</h></idx>
			<idx><h>predicate</h></idx>
			Suppose we wanted to claim that if <m>n</m> is prime,
			then <m>n+7</m> is not prime.
			This looks like an implication.
			I would like to write something like
			<me>
				P(n) \imp \neg P(n+7)
			</me>
			where <m>P(n)</m> means <q> <m>n</m> is prime.</q>  We could have also written <m>P_n</m>, but using parentheses is a little more common, and suggests that we can substitute values for <m>n</m>, just like we substitute values in functions.
			The variable in a sentence like this is called a <term>free variable</term>.
			It is a variable that we have not specified anything about.
			A sentence that contains variables is called a <term>predicate</term>.
		</p>

		<p>
			As we have seen, when we substitute a value for <m>n</m>, we get a statement.
			<m>P(11)</m> is a statement, and therefore
			<me>
				P(11) \imp P(18)
			</me>
			is a statement, which happens to be true.
			In fact, it turns out that no matter what value we plug in for <m>n</m>,
			we get a true implication in this case.
			Thus we claim that the following is a true statement.
			<me>
				\forall n (P(n) \imp P(n+7))
			</me>.
			By the way, once we quantify the <m>n</m>, we say that the variable is no longer <em>free</em>, but rather is a <term>bound variable</term> (it is bound by the quantifier).
			Since there are no free variables any more, the sentence really is a statement.
		</p>

		<p>
			Although there are many types of
			<em>quantifiers</em> in English (e.g., many, few, most,
			etc.) in mathematics we, for the most part, stick to two:
			existential and universal.
			Here is a summary of these two together.
		</p>

		<assemblage>
			<title>Universal and Existential Quantifiers</title>
			<idx><h>quantifier</h></idx>
			<p>
				The existential quantifier is
				<m>\exists</m> and is read
				<q>there exists</q> or
				<q>there is.</q>
			</p>

			<p>
				For example,
				<idx><h>existential quantifier</h></idx>
				<idx><h>quantifier</h><h>there exists</h></idx>
				<idx><h>there exists (quantifier)</h></idx>
				<notation>
				<usage><m>\exists</m></usage>
				<description>existential quantifier</description>
				</notation>
				<me>
					\exists x (x \lt 0)
				</me>
				asserts that there is a number less than 0.
			</p>

			<p>
				The universal quantifier is
				<m>\forall</m> and is read
				<q>for all</q> or
				<q>every.</q>
			</p>

			<p>
				For example,
				<idx><h>universal quantifier</h></idx>
				<idx><h>quantifier</h><h>for all</h></idx>
				<idx><h>for all (quantifier)</h></idx>
				<notation>
				<usage><m>\forall</m></usage>
				<description>universal quantifier</description>
				</notation>
				<me>
					\forall x (x \ge 0)
				</me>
				asserts that every number is greater than or equal to 0.
			</p>
		</assemblage>

		<p>
			As with all mathematical statements,
			we would like to decide whether quantified statements are true or false.
			Consider the statement
			<me>
				\forall x \exists y (y \lt x)
			</me>.
			You would read this,
			<q>for every <m>x</m> there is some <m>y</m> such that <m>y</m> is less than <m>x</m>.</q> Is this true?
			The answer depends on what our <em>domain of discourse</em> is:
			when we say <q>for all</q> <m>x</m>,
			do we mean all positive integers or all real numbers or all elements of some other set?
			Usually this information is implied.
			In discrete mathematics,
			we almost always quantify over the
			<em>natural numbers</em>, 0, 1, 2,
			<ellipsis/>, so let's take that for our domain of discourse here.
		</p>

		<p>
			For the statement to be true,
			we need it to be the case that no matter what natural number we select,
			there is always some natural number that is strictly smaller.
			Perhaps we could let
			<m>y</m> be
			<m>x-1</m>?
			But here is the problem: what if
			<m>x = 0</m>?
			Then
			<m>y = -1</m> and that is
			<em>not a number!</em>
			(in our domain of discourse).
			Thus we see that the statement is false because there is a number which is less than or equal to all other numbers.
			In symbols,
			<me>
				\exists x \forall y (y \ge x)
			</me>.
		</p>

		<p>
			To show that the original statement is false, we proved that the
			<em>negation</em> was true.
			Notice how the negation and original statement compare.
			This is typical.
		</p>

		<assemblage>
			<title>Quantifiers and Negation</title>
			<idx><h>quantifier</h><h>interaction with negation</h></idx>
			<idx><h>negation</h><h>interaction with quantifiers</h></idx>
			<blockquote>
				<p>
					<m>\neg \forall x P(x)</m> is equivalent to
					<m>\exists x \neg P(x)</m>.
				</p>

				<p>
					<m>\neg \exists x P(x)</m> is equivalent to
					<m>\forall x \neg P(x)
					</m>.
				</p>
			</blockquote>
		</assemblage>

		<p>
			Essentially, we can pass the negation symbol over a quantifier,
			but that causes the quantifier to switch type.
			This should not be surprising:
			if not everything has a property,
			then something doesn't have that property.
			And if there is not something with a property,
			then everything doesn't have that property.
		</p>

		<p>
			Another way to see why this makes sense: universal quantifiers are like (possibly infinite) conjunctions, and existential quantifiers are like (possibly infinite) disjunctions.
			De Morgan's laws tells us that when we negate a conjunction, we get a disjunction, and when we negate a disjunction, we get a conjunction.
			Isn't it great when everything works out as it should?
		</p>

		<example>
			<statement>
				<p>
					Suppose we claim that there is no smallest number.
					We can translate this into symbols as
					<me>
						\neg \exists x \forall y (x \le y)
					</me>
					(literally, <q>it is not
					true that there is a number <m>x</m> such that for all numbers <m>y</m>, <m>x</m> is less than or
					equal to <m>y</m></q>).
				</p>

				<p>
					However, we know how negation interacts with quantifiers: we can
					pass a negation over a quantifier by switching the quantifier type (between universal and
					existential).
					So the statement above should be <em>logically equivalent</em> to
					<me>
						\forall x \exists y (y \lt x)
					</me>.
					Notice that <m>y \lt x</m> is
					the negation of <m>x \le y</m>.
					This literally says, <q>for every number <m>x</m> there is a number <m>
					y</m> which is smaller than <m>x</m>.</q> We see that this is another way to make our
					original claim.
				</p>
			</statement>
		</example>

		<p>
			It is important
			to stress that predicate logic <em>extends</em> propositional logic (much in the way quantum
			mechanics extends classical mechanics).
			Everything that we learned about logical equivalence
			and deductions still applies.
			However, predicate logic allows us to analyze statements at a
			higher resolution, digging down into the individual propositions <m>P</m>, <m>Q</m>, etc.
		</p>

		<p>
			To do this, we need to understand how quantifiers and connectives interact.  We have already seen something about negations and quantifiers.  What about the other connectives?  Let's look at an example exploring how the universal quantifier and disjunctions can (or cannot) work together.
		</p>

    <aside>
      <p>

      </p>
    </aside>
    <example>
      <statement>
        <p>
          Consider the two statements,
          <me>
            \forall x (P(x) \vee Q(x)) \qquad \qquad \forall x P(x) \vee \forall x Q(x)
          </me>.
          Are these logically equivalent?
        </p>
      </statement>
      <solution>
        <p>
          These statements are NOT logically equivalent.  Intuitively, the statement on the left is claiming that everything is either a <m>P</m>-thing or a <m>Q</m>-thing.  The statement on the right is claiming either everything is a <m>P</m>-thing or that everything is a <m>Q</m>-thing.  These <em>feel</em> different.
        </p>

        <p>
          To be sure, we would like to think of predicates <m>P(x)</m> and <m>Q(x)</m> and some domain of discourse such that one of the statements is true and the other is false.  How about we let <m>P(x)</m> be, <q><m>x</m> is even</q> and <m>Q(x)</m> be <q><m>x</m> is odd.</q> Our domain of discourse will be all integers (as that is the set of numbers for which even and odd make sense). 
        </p>

        <p>
          The statement on the left is true!  Every number is either even or odd. But is every number even?  No.  Is every number odd?  No.  So the statement on the right is false (it is a <em>false or false</em>).
        </p>

        <p>
          Interestingly, the statement on the right implies the statement on the left.  That is, 
          <me>
            (\forall x P(x) \vee \forall x E(x)) \imp \forall x (P(x) \vee Q(x))
          </me>
          is always true.
        </p>
				<p>
					
					This is sort of like a tautology, although we reserve that term for
					necessary truths in propositional logic.
					A statement in predicate logic that is
					necessarily true gets the more prestigious designation of a <term>law of logic</term>
					<idx>law of
						logic</idx> (or sometimes <term>logically valid</term>, <idx><h>logically valid</h><see>law of logic</see>
						</idx>
						but that is less fun).
					</p>
      </solution>
    </example>

    <p>
      We can also consider how quantifiers interact with each other.
    </p>

		<example>
			<statement>
				<p>
					Can you switch the order of
					quantifiers? For example, consider the two statements:
					<me>
						\forall x \exists y P(x,y) \qquad \text{ and } \qquad \exists y \forall x P(x,y)
					</me>.
					Are these logically equivalent?
				</p>
			</statement>

			<solution>
				<p>
					These statements are NOT logically
					equivalent.
					To see this, we should provide an interpretation of the predicate <m>P(x,y)</m>
					which makes one of the statements true and the other false.
				</p>

				<p>
					Let <m>P(x,y)</m> be the
					predicate <m>x \lt y</m>.
					It is true, in the natural numbers, that for all <m>x</m> there is
					some <m>y</m> greater than that <m>x</m> (since there are infinitely many numbers).
					However,
					there is not a natural number <m>y</m> which is greater than every number <m>x</m>.
					Thus it is
					possible for <m>\forall x \exists y P(x,y)</m> to be true while <m>\exists y \forall x P(x,y)</m>
					is false.
				</p>

				<p>
					We cannot do the reverse of this though.
					If there is some <m>y</m> for which
					every <m>x</m> satisfies <m>P(x,y)</m>, then certainly for every <m>x</m> there is some <m>y</m> which
					satisfies <m>P(x,y)</m>.
					The first is saying we can find one <m>y</m> that works for every <m>x</m>.
					The second allows different <m>y</m>'s to work for different <m>x</m>'s, but there is nothing
					preventing us from using the same <m>y</m> that work for every <m>x</m>.
					In other words, while
					we don't have logical equivalence between the two statements, we do have a valid deduction
					rule:
				</p>

				<sidebyside>
					<tabular halign="center">
						<row bottom="minor">
						<cell />
						<cell><m>\exists y \forall x P(x,y)</m>
						</cell>
						</row>
						<row>
						<cell><m>
						\therefore</m>
						</cell>
						<cell><m>\forall x \exists y P(x,y)</m>
						</cell>
						</row>
					</tabular>
				</sidebyside>

				<p>
					Put yet another way, this says that the single statement
					<me>
						\exists y \forall x P(x,y) \imp \forall x \exists y P(x,y)
					</me>
					is always true; it is a law of logic.

				</p>
			</solution>
		</example>

    <p>
			A full treatment of predicate logic is beyond the scope of this text.
			One reason is that there is no systematic procedure for deciding whether two statements in
			predicate logic are logically equivalent (i.e., there is no analogue to truth tables here).

		</p>

		<paragraphs xml:id="pars-implicituantifiers">
			<title>Implicit Quantifiers</title>
			<idx><h>implicit quantifier</h></idx>
			<idx><h>quantifier</h><h>implicit</h></idx>
			<p>
				It is always a good idea to be precise in mathematics.
				Sometimes though, we can relax a little bit, as long as we all agree on a convention.
				An example of such a convention is to assume that sentences containing predicates with free variables are intended as statements, where the variables are universally quantified.  
			</p>

			<p>
				For example, do you believe that if a shape is a square, then it is a rectangle?  But how can that be true if it is not a statement?  To be a little more precise, we have two predicates: <m>S(x)</m> standing for <q><m>x</m> is a square</q> and <m>R(x)</m> standing for <q><m>x</m> is a rectangle</q>.
				The <em>sentence</em> we are looking at is,
				<me>
					S(x) \imp R(x)
				</me>.
				This is neither true nor false, as it is not a statement.
				But come on!  We all know that we meant to consider the statement,
				<me>
					\forall x (S(x) \imp R(x))
				</me>,
				and this is what our convention tells us to consider. When we add enough universal quantifiers to the beginning of a sentence so that all free variables become bound, we call the resulting statement the <term>universal generalization</term> of the original sentence.  
			</p>

			<p>
				Similarly, we will often be a bit sloppy about the distinction between a predicate and a statement.
				For example, we might write, <em>let <m>P(n)</m> be the <em>statement</em>, <q><m>n</m> is prime,</q></em> which is technically incorrect.
				It is implicit that we mean that we are defining <m>P(n)</m> to be a predicate, which for each <m>n</m> becomes the statement, <m>n</m> is prime.
			</p>
		</paragraphs>
		<!--
		<p>
			As we saw in <xref ref="sec_logic-statements" />, not every statement can be analyzed using logical connectives alone.
			For example, we might want to work with the statement:
		</p>

		<blockquote>
			<p>
				All primes greater than 2 are odd.
			</p>
		</blockquote>

		<p>
			To write this
			statement symbolically, we must use quantifiers.
			We can translate as follows:
			<me>
				\forall x ((P(x) \wedge x \gt 2) \imp O(x))
			</me>.
			In this case, we are using <m>
			P(x)</m> to denote <q><m>x</m> is prime</q> and <m>O(x)</m> to denote <q><m>x</m> is odd.</q> These are not
			propositions, since their truth value depends on the input <m>x</m>.
			Better to think of <m>P</m> and <m>
			O</m> as denoting <em>properties</em> of their input.
			The technical term for these is <term>predicates</term>
			and when we study them in logic, we need to use <term>predicate logic</term>.
		</p>
		-->

	</subsection>


  <reading-questions xml:id="rqs-logic-quant">
    <exercise label="rq-logic-quant-free-variables">
      <statement>
        <p>
          Consider the sentence, <m>\exists x P(x,y) \imp \forall x P(x,y)</m>.  What can we say about this sentence?  Select all that apply.
        </p>
      </statement>
      <choices multiple-correct="yes" randomize="yes">
      <choice>
        <statement>
          <p>
            The sentence is a statement because it contains quantifiers.
          </p>
        </statement>
      </choice>
      <choice>
        <statement>
          <p>
            The sentence is not a statement because <m>x</m> and <m>z</m> are free variables.
          </p>
        </statement>
      </choice>
      <choice correct="yes">
        <statement>
          <p>
            The sentence is not a statement because <m>y</m> is a free variable.
          </p>
        </statement>
      </choice>
      <choice correct="yes">
        <statement>
          <p>
            The universal generalization of the sentence is a statement.
          </p>
        </statement>
      </choice>
      </choices>
    </exercise>
    
    <exercise label="rq-logic-quant-deduction">
      <statement>
        <p>
          Which of the following statements is a <em>law of logic</em>?
        </p>
      </statement>
      <choices randomize="yes">
        <choice correct="yes">
          <statement>
            <p>
              <m>\forall x (P(x) \vee \neg P(x))</m>.
            </p>
          </statement>
        </choice>
        <choice>
          <statement>
            <p>
              <m>\exists x P(x) \imp \forall x P(x)</m>.
            </p>
          </statement>
        </choice>
        <choice>
          <statement>
            <p>
              <m>\neg\forall x P(x) \imp \exists x P(x)</m>.
            </p>
          </statement>
        </choice>
        <choice>
          <statement>
            <p>
              <m>\forall x \exists y P(x,y) \iff \exists y \forall x P(x,y)</m>.
            </p>
          </statement>
        </choice>
      </choices>
    </exercise>
    
    <exercise label="rq-logic-quant-q">
      <statement>
        <p>
          What questions do you have after reading this section? Write at least one question about the content of this section that you are curious about.
        </p>
      </statement>
      <response />
    </exercise>
  </reading-questions>
	<xi:include href="practice/logic-quant.ptx"/>
	<xi:include href="exercises/logic-quant.ptx"/>
</section>
